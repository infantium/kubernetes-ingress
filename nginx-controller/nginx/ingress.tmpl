{{range $upstream := .Upstreams}}
upstream {{$upstream.Name}} {
	{{range $server := $upstream.UpstreamServers}}
	server {{$server.Address}}:{{$server.Port}};{{end}}
}{{end}}

{{range $server := .Servers}}
server {
	listen 80;
	{{if $server.SSL}}
	listen 443 ssl;
	ssl_certificate {{$server.SSLCertificate}};
	ssl_certificate_key {{$server.SSLCertificateKey}};
	ssl_session_timeout 5m;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
    ssl_prefer_server_ciphers on;
	ssl_session_cache shared:SSL:10m;
	{{end}}

	{{if $server.Name}}
	server_name {{$server.Name}};
	{{end}}

	{{if $server.SSL}}
	if ($scheme = http) {
		return 301 https://$host$request_uri;
	}
	{{end}}

	{{range $location := $server.Locations}}
	location {{$location.Path}} {
		proxy_http_version 1.1;
		{{if $location.Websocket}}
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection $connection_upgrade;
		{{end}}
		proxy_connect_timeout {{$location.ProxyConnectTimeout}};
		proxy_read_timeout {{$location.ProxyReadTimeout}};
		client_max_body_size {{$location.ClientMaxBodySize}};
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Host $host;
		proxy_set_header X-Forwarded-Port $server_port;
		proxy_set_header X-Forwarded-Proto $scheme;
		proxy_pass http://{{$location.Upstream.Name}};
	}{{end}}
}{{end}}
